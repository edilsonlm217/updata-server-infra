version: '3.8'

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4  # 🔄 Versão estável recente
    networks:
      - internal_network  # 🕸️ Comunicação privada entre serviços (ex: com Kibana)
    environment:
      - discovery.type=single-node  # 🧪 Indica que é um cluster de nó único (sem discovery multicast)
      - bootstrap.memory_lock=true  # 🚫 Impede que o sistema use swap para o processo do ES (melhora performance)
      - xpack.security.enabled=true  # 🔐 Habilita autenticação com usuário/senha e outras features de segurança
      - ELASTIC_PASSWORD=admin123  # 👤 Define a senha do superusuário "elastic" (caso não defina, ES gera uma aleatória no log)
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"  # 🧠 Reserva 2GB de heap para a JVM (ideal que ambos valores sejam iguais)
    ulimits:
      memlock:
        soft: -1
        hard: -1  # ✅ Permite o uso do travamento de memória com `bootstrap.memory_lock`
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data  # 💾 Persistência dos dados entre reinícios
    restart: always  # 🔁 Garante que reinicie automaticamente em caso de falhas

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.13.4  # Atualizar para 8.x
    networks:
      - internal_network
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic                  # Usuário configurado no ES
      - ELASTICSEARCH_PASSWORD=admin123                  # Senha configurada no ES
    restart: always

volumes:
  elasticsearch_data:
    driver: local  # 📦 Volume local padrão para persistência de dados

networks:
  internal_network:
    external: true  # 🌐 Presume que a rede já existe (criada fora do compose)
