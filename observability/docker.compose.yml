version: '3.8'

services:
  elasticsearch:
    container_name: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}"  # 🔄 Versão dinâmica
    networks:
      - internal_network  # 🕸️ Comunicação privada entre serviços (ex: com Kibana)
    environment:
      - discovery.type=single-node  # 🧪 Cluster nó único
      - bootstrap.memory_lock=true  # 🚫 Evita swap
      - xpack.security.enabled=true  # 🔐 Segurança ativada
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}  # 👤 Senha via variável
      - "ES_JAVA_OPTS=${ES_JAVA_OPTS}"  # 🧠 Heap da JVM
    ulimits:
      memlock:
        soft: -1
        hard: -1  # ✅ Travamento de memória
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data  # 💾 Dados persistentes
    restart: always  # 🔁 Reinício automático

  kibana:
    container_name: kibana
    image: "docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}"  # Mesma versão do ES
    networks:
      - internal_network
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}  # Usuário via variável
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}  # Senha via variável
    restart: always

volumes:
  elasticsearch_data:
    driver: local  # 📦 Volume local para persistência

networks:
  internal_network:
    external: true  # 🌐 Rede já criada externamente
